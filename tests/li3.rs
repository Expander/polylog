extern crate polylog;
extern crate num;
use num::complex::Complex;
use num::Float;
use polylog::li3::Li3;

macro_rules! assert_eq_float {
    ($a:expr, $b:expr, $eps:expr) => {
        assert!(($a - $b).abs() < $eps);
    }
}

fn assert_eq_complex(a: Complex<f64>, b: Complex<f64>, eps: f64) -> () {
    assert_eq_float!(a.re, b.re, eps);
    assert_eq_float!(a.im, b.im, eps);
}

trait CLn<T> {
    fn cln(&self) -> T;
}

impl CLn<Complex<f64>> for Complex<f64> {
    fn cln(&self) -> Complex<f64> {
        let mut zf = *self;
        if zf.re == 0. { zf.re = 0. }
        if zf.im == 0. { zf.im = 0. }
        zf.ln()
    }
}

fn id1(z: Complex<f64>) -> Complex<f64> {
    z.li3() + (-z).li3() - 0.25*(z*z).li3()
}

fn id2(z: Complex<f64>) -> Complex<f64> {
    let pi = std::f64::consts::PI;

    if z.norm() < std::f64::EPSILON || (z.re > 0. && z.re < 1.) {
        Complex::new(0.,0.)
    } else {
        z.li3() - (1./z).li3() + (-z).cln().powf(3.)/6. + pi*pi/6.*(-z).cln()
    }
}

fn id3(z: Complex<f64>) -> Complex<f64> {
    let pi = std::f64::consts::PI;
    let z3 = 1.202056903159594;

    if (1.0 - z).re.abs() < 1e-10 || (z.re <= 0. && z.im == 0.) {
        Complex::new(0.,0.)
    } else {
        z.li3() + (1.-z).li3() + (1.-1./z).li3()
            - (z3 + z.cln().powf(3.)/6. + pi*pi/6.*z.cln() - 0.5*z.cln().powf(2.)*(1.-z).cln())
    }
}

#[test]
fn special_values() {
    use num::Zero;
    let pi  = std::f64::consts::PI;
    let pi2 = pi*pi;
    let eps = 1e-15;
    let ln2 = 2.0.ln();
    let z3  = 1.2020569031595942853997381615114;
    let phi = 0.5*((5.0).sqrt() + 1.0); // golden ratio
    let zero = Complex::zero();

    assert_eq_complex(zero.li3(), zero, eps);
    assert_eq_complex(Complex::new(1., 0.).li3(),
                      Complex::new(z3, 0.), eps);
    assert_eq_complex(Complex::new(-1., 0.).li3(),
                      Complex::new(-3./4.*z3, 0.), eps);
    assert_eq_complex(Complex::new(0.5, 0.).li3(),
                      Complex::new(ln2.powf(3.)/6. - pi2/12.*ln2 + 7./8.*z3, 0.), eps);
    assert_eq_complex(Complex::new(1./(phi*phi), 0.).li3(),
                      Complex::new(4./5.*z3 + 2./3.*phi.ln().powf(3.) - 2./15.*pi2*phi.ln(), 0.), eps);
}

/// @TODO: add Mma values
#[test]
fn test_mma_values() {
    let eps = 1e-14;
    let mma_values : Vec<(Complex<f64>, Complex<f64>)> = vec![];

    for &(v, li3) in mma_values.iter() {
        assert_eq_complex(v.li3(), li3, eps);
    }
}

#[test]
fn test_mma_values_close_to_unity() {
    let eps = 1e-14;
    let mma_values_close_to_unity : Vec<(Complex<f64>, Complex<f64>)> = vec![
        (Complex::new(0.9, -0.1), Complex::new(1.0437515932750159, -0.14345530534001655)),
        (Complex::new(0.9, -0.01), Complex::new(1.0495970785273359, -0.014440203537002904)),
        (Complex::new(0.9, -0.001), Complex::new(1.0496583311340555, -0.0014441263973923625)),
        (Complex::new(0.9, -0.0001), Complex::new(1.0496589439958823, -0.00014441274592792326)),
        (Complex::new(0.9, -0.00001), Complex::new(1.0496589501245341, -0.000014441274698982471)),
        (Complex::new(0.9, -1.0e-6), Complex::new(1.049658950185821, -1.444127470004437e-6)),
        (Complex::new(0.9, -1.0e-7), Complex::new(1.0496589501864337, -1.444127470005499e-7)),
        (Complex::new(0.9, -1.0e-8), Complex::new(1.0496589501864395, -1.4441274700055095e-8)),
        (Complex::new(0.9, -1.0e-9), Complex::new(1.0496589501864397, -1.44412747000551e-9)),
        (Complex::new(0.9, -1.0e-10), Complex::new(1.0496589501864397, -1.4441274700055094e-10)),
        (Complex::new(0.9, 0.), Complex::new(1.04965895018644, 0.)),
        (Complex::new(0.9, 0.1), Complex::new(1.0437515932750159, 0.14345530534001655)),
        (Complex::new(0.9, 0.01), Complex::new(1.0495970785273359, 0.014440203537002904)),
        (Complex::new(0.9, 0.001), Complex::new(1.0496583311340555, 0.0014441263973923625)),
        (Complex::new(0.9, 0.0001), Complex::new(1.0496589439958823, 0.00014441274592792326)),
        (Complex::new(0.9, 0.00001), Complex::new(1.0496589501245341, 0.000014441274698982471)),
        (Complex::new(0.9, 1.0e-6), Complex::new(1.049658950185821, 1.444127470004437e-6)),
        (Complex::new(0.9, 1.0e-7), Complex::new(1.0496589501864337, 1.444127470005499e-7)),
        (Complex::new(0.9, 1.0e-8), Complex::new(1.0496589501864395, 1.4441274700055095e-8)),
        (Complex::new(0.9, 1.0e-9), Complex::new(1.0496589501864397, 1.44412747000551e-9)),
        (Complex::new(0.9, 1.0e-10), Complex::new(1.0496589501864397, 1.4441274700055094e-10)),
        (Complex::new(0.9, 0.), Complex::new(1.04965895018644, 0.)),
        (Complex::new(0.99, -0.1), Complex::new(1.1754417440793332, -0.1560869130904595)),
        (Complex::new(0.99, -0.01), Complex::new(1.1856824783871065, -0.016032846585783876)),
        (Complex::new(0.99, -0.001), Complex::new(1.1858313951532469, -0.0016046570084006881)),
        (Complex::new(0.99, -0.0001), Complex::new(1.1858329182561131, -0.00016046720179982478)),
        (Complex::new(0.99, -0.00001), Complex::new(1.1858329334911475, -0.000016046721682563416)),
        (Complex::new(0.99, -1.0e-6), Complex::new(1.1858329336434978, -1.6046721697589386e-6)),
        (Complex::new(0.99, -1.0e-7), Complex::new(1.1858329336450217, -1.6046721697739647e-7)),
        (Complex::new(0.99, -1.0e-8), Complex::new(1.1858329336450368, -1.6046721697741152e-8)),
        (Complex::new(0.99, -1.0e-9), Complex::new(1.1858329336450368, -1.6046721697741164e-9)),
        (Complex::new(0.99, -1.0e-10), Complex::new(1.1858329336450368, -1.6046721697741164e-10)),
        (Complex::new(0.99, 0.), Complex::new(1.185832933645037, 0.)),
        (Complex::new(0.99, 0.1), Complex::new(1.1754417440793332, 0.1560869130904595)),
        (Complex::new(0.99, 0.01), Complex::new(1.1856824783871065, 0.016032846585783876)),
        (Complex::new(0.99, 0.001), Complex::new(1.1858313951532469, 0.0016046570084006881)),
        (Complex::new(0.99, 0.0001), Complex::new(1.1858329182561131, 0.00016046720179982478)),
        (Complex::new(0.99, 0.00001), Complex::new(1.1858329334911475, 0.000016046721682563416)),
        (Complex::new(0.99, 1.0e-6), Complex::new(1.1858329336434978, 1.6046721697589386e-6)),
        (Complex::new(0.99, 1.0e-7), Complex::new(1.1858329336450217, 1.6046721697739647e-7)),
        (Complex::new(0.99, 1.0e-8), Complex::new(1.1858329336450368, 1.6046721697741152e-8)),
        (Complex::new(0.99, 1.0e-9), Complex::new(1.1858329336450368, 1.6046721697741164e-9)),
        (Complex::new(0.99, 1.0e-10), Complex::new(1.1858329336450368, 1.6046721697741164e-10)),
        (Complex::new(0.99, 0.), Complex::new(1.185832933645037, 0.)),
        (Complex::new(0.999, -0.1), Complex::new(1.189078410096532, -0.15770264234304024)),
        (Complex::new(0.999, -0.01), Complex::new(1.2002047509657854, -0.016334027084698173)),
        (Complex::new(0.999, -0.001), Complex::new(1.2004127486328664, -0.0016385104011724713)),
        (Complex::new(0.999, -0.0001), Complex::new(1.2004153275931608, -0.00016386596273665463)),
        (Complex::new(0.999, -0.00001), Complex::new(1.2004153537314002, -0.000016386612501344713)),
        (Complex::new(0.999, -1.0e-6), Complex::new(1.2004153539928237, -1.6386612663785767e-6)),
        (Complex::new(0.999, -1.0e-7), Complex::new(1.2004153539954379, -1.6386612665410195e-7)),
        (Complex::new(0.999, -1.0e-8), Complex::new(1.2004153539954638, -1.638661266542644e-8)),
        (Complex::new(0.999, -1.0e-9), Complex::new(1.2004153539954643, -1.6386612665426608e-9)),
        (Complex::new(0.999, -1.0e-10), Complex::new(1.2004153539954643, -1.6386612665426603e-10)),
        (Complex::new(0.999, 0.), Complex::new(1.2004153539954643, 0.)),
        (Complex::new(0.999, 0.1), Complex::new(1.189078410096532, 0.15770264234304024)),
        (Complex::new(0.999, 0.01), Complex::new(1.2002047509657854, 0.016334027084698173)),
        (Complex::new(0.999, 0.001), Complex::new(1.2004127486328664, 0.0016385104011724713)),
        (Complex::new(0.999, 0.0001), Complex::new(1.2004153275931608, 0.00016386596273665463)),
        (Complex::new(0.999, 0.00001), Complex::new(1.2004153537314002, 0.000016386612501344713)),
        (Complex::new(0.999, 1.0e-6), Complex::new(1.2004153539928237, 1.6386612663785767e-6)),
        (Complex::new(0.999, 1.0e-7), Complex::new(1.2004153539954379, 1.6386612665410195e-7)),
        (Complex::new(0.999, 1.0e-8), Complex::new(1.2004153539954638, 1.638661266542644e-8)),
        (Complex::new(0.999, 1.0e-9), Complex::new(1.2004153539954643, 1.6386612665426608e-9)),
        (Complex::new(0.999, 1.0e-10), Complex::new(1.2004153539954643, 1.6386612665426603e-10)),
        (Complex::new(0.999, 0.), Complex::new(1.2004153539954643, 0.)),
        (Complex::new(0.9999, -0.1), Complex::new(1.1904466579079243, -0.15786873315351146)),
        (Complex::new(0.9999, -0.01), Complex::new(1.2016701545721182, -0.016369169740938255)),
        (Complex::new(0.9999, -0.001), Complex::new(1.2018892099787, -0.001643533237832544)),
        (Complex::new(0.9999, -0.0001), Complex::new(1.201892417598741, -0.00016440620863832146)),
        (Complex::new(0.9999, -0.00001), Complex::new(1.2018924547062262, -0.000016440772258673522)),
        (Complex::new(0.9999, -1.0e-6), Complex::new(1.2018924550807975, -1.6440773903324204e-6)),
        (Complex::new(0.9999, -1.0e-7), Complex::new(1.2018924550845436, -1.6440773919787143e-7)),
        (Complex::new(0.9999, -1.0e-8), Complex::new(1.2018924550845813, -1.6440773919951795e-8)),
        (Complex::new(0.9999, -1.0e-9), Complex::new(1.2018924550845815, -1.6440773919953418e-9)),
        (Complex::new(0.9999, -1.0e-10), Complex::new(1.2018924550845815, -1.6440773919953452e-10)),
        (Complex::new(0.9999, 0.), Complex::new(1.2018924550845815, 0.)),
        (Complex::new(0.9999, 0.1), Complex::new(1.1904466579079243, 0.15786873315351146)),
        (Complex::new(0.9999, 0.01), Complex::new(1.2016701545721182, 0.016369169740938255)),
        (Complex::new(0.9999, 0.001), Complex::new(1.2018892099787, 0.001643533237832544)),
        (Complex::new(0.9999, 0.0001), Complex::new(1.201892417598741, 0.00016440620863832146)),
        (Complex::new(0.9999, 0.00001), Complex::new(1.2018924547062262, 0.000016440772258673522)),
        (Complex::new(0.9999, 1.0e-6), Complex::new(1.2018924550807975, 1.6440773903324204e-6)),
        (Complex::new(0.9999, 1.0e-7), Complex::new(1.2018924550845436, 1.6440773919787143e-7)),
        (Complex::new(0.9999, 1.0e-8), Complex::new(1.2018924550845813, 1.6440773919951795e-8)),
        (Complex::new(0.9999, 1.0e-9), Complex::new(1.2018924550845815, 1.6440773919953418e-9)),
        (Complex::new(0.9999, 1.0e-10), Complex::new(1.2018924550845815, 1.6440773919953452e-10)),
        (Complex::new(0.9999, 0.), Complex::new(1.2018924550845815, 0.)),
        (Complex::new(0.99999, -0.1), Complex::new(1.1905835281106707, -0.15788538846379374)),
        (Complex::new(0.99999, -0.01), Complex::new(1.2018168289109799, -0.016372747237146285)),
        (Complex::new(0.99999, -0.001), Complex::new(1.2020370874977768, -0.0016440895841030726)),
        (Complex::new(0.99999, -0.0001), Complex::new(1.2020404104388198, -0.0001644770684505672)),
        (Complex::new(0.99999, -0.00001), Complex::new(1.2020404538974552, -0.000016448238514679638)),
        (Complex::new(0.99999, -1.0e-6), Complex::new(1.2020404543823975, -1.6448253686015791e-6)),
        (Complex::new(0.99999, -1.0e-7), Complex::new(1.202040454387282, -1.6448253850801817e-7)),
        (Complex::new(0.99999, -1.0e-8), Complex::new(1.2020404543873306, -1.6448253852451226e-8)),
        (Complex::new(0.99999, -1.0e-9), Complex::new(1.2020404543873309, -1.644825385246759e-9)),
        (Complex::new(0.99999, -1.0e-10), Complex::new(1.2020404543873309, -1.6448253852467951e-10)),
        (Complex::new(0.99999, 0.), Complex::new(1.2020404543873313, 0.)),
        (Complex::new(0.99999, 0.1), Complex::new(1.1905835281106707, 0.15788538846379374)),
        (Complex::new(0.99999, 0.01), Complex::new(1.2018168289109799, 0.016372747237146285)),
        (Complex::new(0.99999, 0.001), Complex::new(1.2020370874977768, 0.0016440895841030726)),
        (Complex::new(0.99999, 0.0001), Complex::new(1.2020404104388198, 0.0001644770684505672)),
        (Complex::new(0.99999, 0.00001), Complex::new(1.2020404538974552, 0.000016448238514679638)),
        (Complex::new(0.99999, 1.0e-6), Complex::new(1.2020404543823975, 1.6448253686015791e-6)),
        (Complex::new(0.99999, 1.0e-7), Complex::new(1.202040454387282, 1.6448253850801817e-7)),
        (Complex::new(0.99999, 1.0e-8), Complex::new(1.2020404543873306, 1.6448253852451226e-8)),
        (Complex::new(0.99999, 1.0e-9), Complex::new(1.2020404543873309, 1.644825385246759e-9)),
        (Complex::new(0.99999, 1.0e-10), Complex::new(1.2020404543873309, 1.6448253852467951e-10)),
        (Complex::new(0.99999, 0.), Complex::new(1.2020404543873313, 0.)),
        (Complex::new(0.999999, -0.1), Complex::new(1.190597215584737, -0.15788705445815857)),
        (Complex::new(0.999999, -0.01), Complex::new(1.2018314976837696, -0.016373105633262858)),
        (Complex::new(0.999999, -0.001), Complex::new(1.202051877596194, -0.0016441458939124647)),
        (Complex::new(0.999999, -0.0001), Complex::new(1.202055213058439, -0.00016448470156174208)),
        (Complex::new(0.999999, -0.00001), Complex::new(1.202055257677767, -0.000016449154222895493)),
        (Complex::new(0.999999, -1.0e-6), Complex::new(1.2020552582263129, -1.6449207428310494e-6)),
        (Complex::new(0.999999, -1.0e-7), Complex::new(1.202055258232302, -1.644920894586719e-7)),
        (Complex::new(0.999999, -1.0e-8), Complex::new(1.202055258232362, -1.6449208962346455e-8)),
        (Complex::new(0.999999, -1.0e-9), Complex::new(1.202055258232363, -1.6449208962514592e-9)),
        (Complex::new(0.999999, -1.0e-10), Complex::new(1.202055258232363, -1.6449208962515387e-10)),
        (Complex::new(0.999999, 0.), Complex::new(1.2020552582323627, 0.)),
        (Complex::new(0.999999, 0.1), Complex::new(1.190597215584737, 0.15788705445815857)),
        (Complex::new(0.999999, 0.01), Complex::new(1.2018314976837696, 0.016373105633262858)),
        (Complex::new(0.999999, 0.001), Complex::new(1.202051877596194, 0.0016441458939124647)),
        (Complex::new(0.999999, 0.0001), Complex::new(1.202055213058439, 0.00016448470156174208)),
        (Complex::new(0.999999, 0.00001), Complex::new(1.202055257677767, 0.000016449154222895493)),
        (Complex::new(0.999999, 1.0e-6), Complex::new(1.2020552582263129, 1.6449207428310494e-6)),
        (Complex::new(0.999999, 1.0e-7), Complex::new(1.202055258232302, 1.644920894586719e-7)),
        (Complex::new(0.999999, 1.0e-8), Complex::new(1.202055258232362, 1.6449208962346455e-8)),
        (Complex::new(0.999999, 1.0e-9), Complex::new(1.202055258232363, 1.6449208962514592e-9)),
        (Complex::new(0.999999, 1.0e-10), Complex::new(1.202055258232363, 1.6449208962515387e-10)),
        (Complex::new(0.999999, 0.), Complex::new(1.2020552582323627, 0.)),
        (Complex::new(0.9999999, -0.1), Complex::new(1.1905985843366804, -0.1578872210622301)),
        (Complex::new(0.9999999, -0.01), Complex::new(1.2018329645744363, -0.01637314147935474)),
        (Complex::new(0.9999999, -0.001), Complex::new(1.2020533566295029, -0.0016441515317921782)),
        (Complex::new(0.9999999, -0.0001), Complex::new(1.2020566933541033, -0.0001644854716948749)),
        (Complex::new(0.9999999, -0.00001), Complex::new(1.2020567380994076, -0.000016449251274278167)),
        (Complex::new(0.9999999, -1.0e-6), Complex::new(1.2020567386595704, -1.6449319720864177e-6)),
        (Complex::new(0.9999999, -1.0e-7), Complex::new(1.2020567386661956, -1.6449325041889244e-7)),
        (Complex::new(0.9999999, -1.0e-8), Complex::new(1.2020567386662666, -1.6449325193674055e-8)),
        (Complex::new(0.9999999, -1.0e-9), Complex::new(1.2020567386662675, -1.644932519531053e-9)),
        (Complex::new(0.9999999, -1.0e-10), Complex::new(1.2020567386662675, -1.6449325195321118e-10)),
        (Complex::new(0.9999999, 0.), Complex::new(1.2020567386662677, 0.)),
        (Complex::new(0.9999999, 0.1), Complex::new(1.1905985843366804, 0.1578872210622301)),
        (Complex::new(0.9999999, 0.01), Complex::new(1.2018329645744363, 0.01637314147935474)),
        (Complex::new(0.9999999, 0.001), Complex::new(1.2020533566295029, 0.0016441515317921782)),
        (Complex::new(0.9999999, 0.0001), Complex::new(1.2020566933541033, 0.0001644854716948749)),
        (Complex::new(0.9999999, 0.00001), Complex::new(1.2020567380994076, 0.000016449251274278167)),
        (Complex::new(0.9999999, 1.0e-6), Complex::new(1.2020567386595704, 1.6449319720864177e-6)),
        (Complex::new(0.9999999, 1.0e-7), Complex::new(1.2020567386661956, 1.6449325041889244e-7)),
        (Complex::new(0.9999999, 1.0e-8), Complex::new(1.2020567386662666, 1.6449325193674055e-8)),
        (Complex::new(0.9999999, 1.0e-9), Complex::new(1.2020567386662675, 1.644932519531053e-9)),
        (Complex::new(0.9999999, 1.0e-10), Complex::new(1.2020567386662675, 1.6449325195321118e-10)),
        (Complex::new(0.9999999, 0.), Complex::new(1.2020567386662677, 0.)),
        (Complex::new(0.99999999, -0.1), Complex::new(1.1905987212119202, -0.15788723772268337)),
        (Complex::new(0.99999999, -0.01), Complex::new(1.2018331112636367, -0.0163731450640289)),
        (Complex::new(0.99999999, -0.001), Complex::new(1.2020535045330687, -0.0016441520956488112)),
        (Complex::new(0.99999999, -0.0001), Complex::new(1.202056841384007, -0.0001644855487778894)),
        (Complex::new(0.99999999, -0.00001), Complex::new(1.2020568861420107, -0.000016449261047734425)),
        (Complex::new(0.99999999, -1.0e-6), Complex::new(1.2020568867034347, -1.644933149829588e-6)),
        (Complex::new(0.99999999, -1.0e-7), Complex::new(1.2020568867101762, -1.6449338343457468e-7)),
        (Complex::new(0.99999999, -1.0e-8), Complex::new(1.2020568867102535, -1.644933887557756e-8)),
        (Complex::new(0.99999999, -1.0e-9), Complex::new(1.2020568867102543, -1.6449338890661486e-9)),
        (Complex::new(0.99999999, -1.0e-10), Complex::new(1.2020568867102543, -1.644933889076313e-10)),
        (Complex::new(0.99999999, 0.), Complex::new(1.2020568867102548, 0.)),
        (Complex::new(0.99999999, 0.1), Complex::new(1.1905987212119202, 0.15788723772268337)),
        (Complex::new(0.99999999, 0.01), Complex::new(1.2018331112636367, 0.0163731450640289)),
        (Complex::new(0.99999999, 0.001), Complex::new(1.2020535045330687, 0.0016441520956488112)),
        (Complex::new(0.99999999, 0.0001), Complex::new(1.202056841384007, 0.0001644855487778894)),
        (Complex::new(0.99999999, 0.00001), Complex::new(1.2020568861420107, 0.000016449261047734425)),
        (Complex::new(0.99999999, 1.0e-6), Complex::new(1.2020568867034347, 1.644933149829588e-6)),
        (Complex::new(0.99999999, 1.0e-7), Complex::new(1.2020568867101762, 1.6449338343457468e-7)),
        (Complex::new(0.99999999, 1.0e-8), Complex::new(1.2020568867102535, 1.644933887557756e-8)),
        (Complex::new(0.99999999, 1.0e-9), Complex::new(1.2020568867102543, 1.6449338890661486e-9)),
        (Complex::new(0.99999999, 1.0e-10), Complex::new(1.2020568867102543, 1.644933889076313e-10)),
        (Complex::new(0.99999999, 0.), Complex::new(1.2020568867102548, 0.)),
        (Complex::new(0.999999999, -0.1), Complex::new(1.1905987348994447, -0.15788723938872867)),
        (Complex::new(0.999999999, -0.01), Complex::new(1.2018331259325583, -0.016373145422497064)),
        (Complex::new(0.999999999, -0.001), Complex::new(1.2020535193234267, -0.0016441521520360735)),
        (Complex::new(0.999999999, -0.0001), Complex::new(1.2020568561870002, -0.00016448555648739132)),
        (Complex::new(0.999999999, -0.00001), Complex::new(1.2020569009462756, -0.000016449262025778057)),
        (Complex::new(0.999999999, -1.0e-6), Complex::new(1.2020569015078266, -1.6449332682872125e-6)),
        (Complex::new(0.999999999, -1.0e-7), Complex::new(1.2020569015145806, -1.6449339728431714e-7)),
        (Complex::new(0.999999999, -1.0e-8), Complex::new(1.2020569015146592, -1.6449340412931976e-8)),
        (Complex::new(0.999999999, -1.0e-9), Complex::new(1.2020569015146603, -1.6449340466375144e-9)),
        (Complex::new(0.999999999, -1.0e-10), Complex::new(1.2020569015146603, -1.6449340465366706e-10)),
        (Complex::new(0.999999999, 0.), Complex::new(1.2020569015146603, 0.)),
        (Complex::new(0.999999999, 0.1), Complex::new(1.1905987348994447, 0.15788723938872867)),
        (Complex::new(0.999999999, 0.01), Complex::new(1.2018331259325583, 0.016373145422497064)),
        (Complex::new(0.999999999, 0.001), Complex::new(1.2020535193234267, 0.0016441521520360735)),
        (Complex::new(0.999999999, 0.0001), Complex::new(1.2020568561870002, 0.00016448555648739132)),
        (Complex::new(0.999999999, 0.00001), Complex::new(1.2020569009462756, 0.000016449262025778057)),
        (Complex::new(0.999999999, 1.0e-6), Complex::new(1.2020569015078266, 1.6449332682872125e-6)),
        (Complex::new(0.999999999, 1.0e-7), Complex::new(1.2020569015145806, 1.6449339728431714e-7)),
        (Complex::new(0.999999999, 1.0e-8), Complex::new(1.2020569015146592, 1.6449340412931976e-8)),
        (Complex::new(0.999999999, 1.0e-9), Complex::new(1.2020569015146603, 1.6449340466375144e-9)),
        (Complex::new(0.999999999, 1.0e-10), Complex::new(1.2020569015146603, 1.6449340465366706e-10)),
        (Complex::new(0.999999999, 0.), Complex::new(1.2020569015146603, 0.)),
        (Complex::new(0.9999999999, -0.1), Complex::new(1.1905987362681971, -0.15788723955533407)),
        (Complex::new(0.9999999999, -0.01), Complex::new(1.2018331273994505, -0.016373145458342803)),
        (Complex::new(0.9999999999, -0.001), Complex::new(1.202053520802463, -0.0016441521576763915)),
        (Complex::new(0.9999999999, -0.0001), Complex::new(1.2020568576672999, -0.00016448555725769387)),
        (Complex::new(0.9999999999, -0.00001), Complex::new(1.2020569024267018, -0.00001644926212358941)),
        (Complex::new(0.9999999999, -1.0e-6), Complex::new(1.202056902988266, -1.6449332801399554e-6)),
        (Complex::new(0.9999999999, -1.0e-7), Complex::new(1.2020569029950208, -1.6449339867612518e-7)),
        (Complex::new(0.9999999999, -1.0e-8), Complex::new(1.2020569029951, -1.644934057217788e-8)),
        (Complex::new(0.9999999999, -1.0e-9), Complex::new(1.202056902995101, -1.6449340640631702e-9)),
        (Complex::new(0.9999999999, -1.0e-10), Complex::new(1.202056902995101, -1.6449340647263276e-10)),
        (Complex::new(0.9999999999, 0.), Complex::new(1.2020569029951012, 0.)),
        (Complex::new(0.9999999999, 0.1), Complex::new(1.1905987362681971, 0.15788723955533407)),
        (Complex::new(0.9999999999, 0.01), Complex::new(1.2018331273994505, 0.016373145458342803)),
        (Complex::new(0.9999999999, 0.001), Complex::new(1.202053520802463, 0.0016441521576763915)),
        (Complex::new(0.9999999999, 0.0001), Complex::new(1.2020568576672999, 0.00016448555725769387)),
        (Complex::new(0.9999999999, 0.00001), Complex::new(1.2020569024267018, 0.00001644926212358941)),
        (Complex::new(0.9999999999, 1.0e-6), Complex::new(1.202056902988266, 1.6449332801399554e-6)),
        (Complex::new(0.9999999999, 1.0e-7), Complex::new(1.2020569029950208, 1.6449339867612518e-7)),
        (Complex::new(0.9999999999, 1.0e-8), Complex::new(1.2020569029951, 1.644934057217788e-8)),
        (Complex::new(0.9999999999, 1.0e-9), Complex::new(1.202056902995101, 1.6449340640631702e-9)),
        (Complex::new(0.9999999999, 1.0e-10), Complex::new(1.202056902995101, 1.6449340647263276e-10)),
        (Complex::new(0.9999999999, 0.), Complex::new(1.2020569029951012, 0.)),
        (Complex::new(1., -0.1), Complex::new(1.1905987364202808, -0.15788723957384526)),
        (Complex::new(1., -0.01), Complex::new(1.201833127562438, -0.016373145462326454)),
        (Complex::new(1., -0.001), Complex::new(1.2020535209668006, -0.0016441521583010204)),
        (Complex::new(1., -0.0001), Complex::new(1.202056857831778, -0.00016448555734338167)),
        (Complex::new(1., -0.00001), Complex::new(1.2020569025911936, -0.00001644926213486357)),
        (Complex::new(1., -1.0e-6), Complex::new(1.2020569031527588, -1.644933279953438e-6)),
        (Complex::new(1., -1.0e-7), Complex::new(1.202056903159514, -1.644933980850102e-7)),
        (Complex::new(1., -1.0e-8), Complex::new(1.2020569031595933, -1.6449340589942456e-8)),
        (Complex::new(1., -1.0e-9), Complex::new(1.2020569031595942, -1.6449340660628283e-9)),
        (Complex::new(1., -1.0e-10), Complex::new(1.2020569031595942, -1.6449340667696865e-10)),
        (Complex::new(1., 0.), Complex::new(1.2020569031595942, 0.)),
        (Complex::new(1., 0.1), Complex::new(1.1905987364202808, 0.15788723957384526)),
        (Complex::new(1., 0.01), Complex::new(1.201833127562438, 0.016373145462326454)),
        (Complex::new(1., 0.001), Complex::new(1.2020535209668006, 0.0016441521583010204)),
        (Complex::new(1., 0.0001), Complex::new(1.202056857831778, 0.00016448555734338167)),
        (Complex::new(1., 0.00001), Complex::new(1.2020569025911936, 0.00001644926213486357)),
        (Complex::new(1., 1.0e-6), Complex::new(1.2020569031527588, 1.644933279953438e-6)),
        (Complex::new(1., 1.0e-7), Complex::new(1.202056903159514, 1.644933980850102e-7)),
        (Complex::new(1., 1.0e-8), Complex::new(1.2020569031595933, 1.6449340589942456e-8)),
        (Complex::new(1., 1.0e-9), Complex::new(1.2020569031595942, 1.6449340660628283e-9)),
        (Complex::new(1., 1.0e-10), Complex::new(1.2020569031595942, 1.6449340667696865e-10)),
        (Complex::new(1., 0.), Complex::new(1.2020569031595942, 0.)),
        (Complex::new(1.1, -0.1), Complex::new(1.3469955032763163, -0.18256957657107634)),
        (Complex::new(1.1, -0.01), Complex::new(1.3735158192691324, -0.03198983046097009)),
        (Complex::new(1.1, -0.001), Complex::new(1.3759806496106053, -0.01605162439395295)),
        (Complex::new(1.1, -0.0001), Complex::new(1.3762257747532007, -0.014447513356418033)),
        (Complex::new(1.1, -0.00001), Complex::new(1.37625027461894, -0.014286997782518311)),
        (Complex::new(1.1, -1.0e-6), Complex::new(1.3762527244800071, -0.01427094517886628)),
        (Complex::new(1.1, -1.0e-7), Complex::new(1.3762529694648593, -0.014269339908039023)),
        (Complex::new(1.1, -1.0e-8), Complex::new(1.3762529939633326, -0.014269179380849895)),
        (Complex::new(1.1, -1.0e-9), Complex::new(1.3762529964131796, -0.014269163328129116)),
        (Complex::new(1.1, -1.0e-10), Complex::new(1.3762529966581643, -0.014269161722860059)),
        (Complex::new(1.1, 0.), Complex::new(1.3762529966853843, -0.014269161544494757)),
        (Complex::new(1.1, 0.1), Complex::new(1.3469955032763163, 0.18256957657107634)),
        (Complex::new(1.1, 0.01), Complex::new(1.3735158192691324, 0.03198983046097009)),
        (Complex::new(1.1, 0.001), Complex::new(1.3759806496106053, 0.01605162439395295)),
        (Complex::new(1.1, 0.0001), Complex::new(1.3762257747532007, 0.014447513356418033)),
        (Complex::new(1.1, 0.00001), Complex::new(1.37625027461894, 0.014286997782518311)),
        (Complex::new(1.1, 1.0e-6), Complex::new(1.3762527244800071, 0.01427094517886628)),
        (Complex::new(1.1, 1.0e-7), Complex::new(1.3762529694648593, 0.014269339908039023)),
        (Complex::new(1.1, 1.0e-8), Complex::new(1.3762529939633326, 0.014269179380849895)),
        (Complex::new(1.1, 1.0e-9), Complex::new(1.3762529964131796, 0.014269163328129116)),
        (Complex::new(1.1, 1.0e-10), Complex::new(1.3762529966581643, 0.014269161722860059)),
        (Complex::new(1.1, 0.), Complex::new(1.3762529966853843, -0.014269161544494757)),
        (Complex::new(1.01, -0.1), Complex::new(1.2058575036183623, -0.15979157933669252)),
        (Complex::new(1.01, -0.01), Complex::new(1.2182772297344064, -0.01685869238332699)),
        (Complex::new(1.01, -0.001), Complex::new(1.2186945643041693, -0.0018379098017378376)),
        (Complex::new(1.01, -0.0001), Complex::new(1.2187238301004837, -0.0003238971996128441)),
        (Complex::new(1.01, -0.00001), Complex::new(1.2187266297300623, -0.00017236188529027308)),
        (Complex::new(1.01, -1.0e-6), Complex::new(1.2187269084244434, -0.000157206997292153)),
        (Complex::new(1.01, -1.0e-7), Complex::new(1.2187269362811965, -0.0001556914949100572)),
        (Complex::new(1.01, -1.0e-8), Complex::new(1.2187269390667455, -0.00015553994453524765)),
        (Complex::new(1.01, -1.0e-9), Complex::new(1.2187269393452989, -0.00015552478949670088)),
        (Complex::new(1.01, -1.0e-10), Complex::new(1.2187269393731541, -0.00015552327399266855)),
        (Complex::new(1.01, 0.), Complex::new(1.2187269393762494, -0.0001555231056036277)),
        (Complex::new(1.01, 0.1), Complex::new(1.2058575036183623, 0.15979157933669252)),
        (Complex::new(1.01, 0.01), Complex::new(1.2182772297344064, 0.01685869238332699)),
        (Complex::new(1.01, 0.001), Complex::new(1.2186945643041693, 0.0018379098017378376)),
        (Complex::new(1.01, 0.0001), Complex::new(1.2187238301004837, 0.0003238971996128441)),
        (Complex::new(1.01, 0.00001), Complex::new(1.2187266297300623, 0.00017236188529027308)),
        (Complex::new(1.01, 1.0e-6), Complex::new(1.2187269084244434, 0.000157206997292153)),
        (Complex::new(1.01, 1.0e-7), Complex::new(1.2187269362811965, 0.0001556914949100572)),
        (Complex::new(1.01, 1.0e-8), Complex::new(1.2187269390667455, 0.00015553994453524765)),
        (Complex::new(1.01, 1.0e-9), Complex::new(1.2187269393452989, 0.00015552478949670088)),
        (Complex::new(1.01, 1.0e-10), Complex::new(1.2187269393731541, 0.00015552327399266855)),
        (Complex::new(1.01, 0.), Complex::new(1.2187269393762494, -0.0001555231056036277)),
        (Complex::new(1.001, -0.1), Complex::new(1.1921200812418433, -0.1580728771014129)),
        (Complex::new(1.001, -0.01), Complex::new(1.20346450841293, -0.016413718527811667)),
        (Complex::new(1.001, -0.001), Complex::new(1.2036994900071758, -0.001651346035133032)),
        (Complex::new(1.001, -0.0001), Complex::new(1.2037048752432449, -0.00016667242847824738)),
        (Complex::new(1.001, -0.00001), Complex::new(1.2037051835202732, -0.00001808093986494801)),
        (Complex::new(1.001, -1.0e-6), Complex::new(1.2037052120118477, -3.2204123363498534e-6)),
        (Complex::new(1.001, -1.0e-7), Complex::new(1.2037052148376401, -1.7343456469466534e-6)),
        (Complex::new(1.001, -1.0e-8), Complex::new(1.2037052151199863, -1.5857388381350609e-6)),
        (Complex::new(1.001, -1.0e-9), Complex::new(1.2037052151482184, -1.57087815636574e-6)),
        (Complex::new(1.001, -1.0e-10), Complex::new(1.2037052151510417, -1.5693920882776257e-6)),
        (Complex::new(1.001, 0.), Complex::new(1.2037052151513554, -1.5692269688116767e-6)),
        (Complex::new(1.001, 0.1), Complex::new(1.1921200812418433, 0.1580728771014129)),
        (Complex::new(1.001, 0.01), Complex::new(1.20346450841293, 0.016413718527811667)),
        (Complex::new(1.001, 0.001), Complex::new(1.2036994900071758, 0.001651346035133032)),
        (Complex::new(1.001, 0.0001), Complex::new(1.2037048752432449, 0.00016667242847824738)),
        (Complex::new(1.001, 0.00001), Complex::new(1.2037051835202732, 0.00001808093986494801)),
        (Complex::new(1.001, 1.0e-6), Complex::new(1.2037052120118477, 3.2204123363498534e-6)),
        (Complex::new(1.001, 1.0e-7), Complex::new(1.2037052148376401, 1.7343456469466534e-6)),
        (Complex::new(1.001, 1.0e-8), Complex::new(1.2037052151199863, 1.5857388381350609e-6)),
        (Complex::new(1.001, 1.0e-9), Complex::new(1.2037052151482184, 1.57087815636574e-6)),
        (Complex::new(1.001, 1.0e-10), Complex::new(1.2037052151510417, 1.5693920882776257e-6)),
        (Complex::new(1.001, 0.), Complex::new(1.2037052151513554, -1.5692269688116767e-6)),
        (Complex::new(1.0001, -0.1), Complex::new(1.1907508251176904, -0.1579057563971642)),
        (Complex::new(1.0001, -0.01), Complex::new(1.201996130603506, -0.0163771357308259)),
        (Complex::new(1.0001, -0.001), Complex::new(1.2022178846215679, -0.0016447866022897834)),
        (Complex::new(1.0001, -0.0001), Complex::new(1.202221373015623, -0.00016458058843425336)),
        (Complex::new(1.0001, -0.00001), Complex::new(1.2022214383694454, -0.000016473455761335904)),
        (Complex::new(1.0001, -1.0e-6), Complex::new(1.2022214415707775, -1.6614952977902996e-6)),
        (Complex::new(1.0001, -1.0e-7), Complex::new(1.2022214418572212, -1.8028542304714639e-7)),
        (Complex::new(1.0001, -1.0e-8), Complex::new(1.2022214418855293, -3.21642978040162e-8)),
        (Complex::new(1.0001, -1.0e-9), Complex::new(1.2022214418883568, -1.7352182348879663e-8)),
        (Complex::new(1.0001, -1.0e-10), Complex::new(1.2022214418886394, -1.5870971513908912e-8)),
        (Complex::new(1.0001, 0.), Complex::new(1.202221441888671, -1.5706392630931987e-8)),
        (Complex::new(1.0001, 0.1), Complex::new(1.1907508251176904, 0.1579057563971642)),
        (Complex::new(1.0001, 0.01), Complex::new(1.201996130603506, 0.0163771357308259)),
        (Complex::new(1.0001, 0.001), Complex::new(1.2022178846215679, 0.0016447866022897834)),
        (Complex::new(1.0001, 0.0001), Complex::new(1.202221373015623, 0.00016458058843425336)),
        (Complex::new(1.0001, 0.00001), Complex::new(1.2022214383694454, 0.000016473455761335904)),
        (Complex::new(1.0001, 1.0e-6), Complex::new(1.2022214415707775, 1.6614952977902996e-6)),
        (Complex::new(1.0001, 1.0e-7), Complex::new(1.2022214418572212, 1.8028542304714639e-7)),
        (Complex::new(1.0001, 1.0e-8), Complex::new(1.2022214418855293, 3.21642978040162e-8)),
        (Complex::new(1.0001, 1.0e-9), Complex::new(1.2022214418883568, 1.7352182348879663e-8)),
        (Complex::new(1.0001, 1.0e-10), Complex::new(1.2022214418886394, 1.5870971513908912e-8)),
        (Complex::new(1.0001, 0.), Complex::new(1.202221441888671, -1.5706392630931987e-8)),
        (Complex::new(1.00001, -0.1), Complex::new(1.1906139448317428, -0.15788909078792707)),
        (Complex::new(1.00001, -0.01), Complex::new(1.2018494265144055, -0.016373543832977077)),
        (Complex::new(1.00001, -0.001), Complex::new(1.2020699549625733, -0.0016442148877343706)),
        (Complex::new(1.00001, -0.0001), Complex::new(1.2020733059812407, -0.0001644942030616159)),
        (Complex::new(1.00001, -0.00001), Complex::new(1.2020733522646574, -0.000016450442800546)),
        (Complex::new(1.00001, -1.0e-6), Complex::new(1.2020733530323078, -1.645198269386098e-6)),
        (Complex::new(1.00001, -1.0e-7), Complex::new(1.2020733530654664, -1.646613360039542e-7)),
        (Complex::new(1.00001, -1.0e-8), Complex::new(1.2020733530683423, -1.660750549071556e-8)),
        (Complex::new(1.00001, -1.0e-9), Complex::new(1.2020733530686252, -1.8021204870480909e-9)),
        (Complex::new(1.00001, -1.0e-10), Complex::new(1.2020733530686536, -3.2158172022947826e-10)),
        (Complex::new(1.00001, 0.), Complex::new(1.202073353068657, -1.5707879441606565e-10)),
        (Complex::new(1.00001, 0.1), Complex::new(1.1906139448317428, 0.15788909078792707)),
        (Complex::new(1.00001, 0.01), Complex::new(1.2018494265144055, 0.016373543832977077)),
        (Complex::new(1.00001, 0.001), Complex::new(1.2020699549625733, 0.0016442148877343706)),
        (Complex::new(1.00001, 0.0001), Complex::new(1.2020733059812407, 0.0001644942030616159)),
        (Complex::new(1.00001, 0.00001), Complex::new(1.2020733522646574, 0.000016450442800546)),
        (Complex::new(1.00001, 1.0e-6), Complex::new(1.2020733530323078, 1.645198269386098e-6)),
        (Complex::new(1.00001, 1.0e-7), Complex::new(1.2020733530654664, 1.646613360039542e-7)),
        (Complex::new(1.00001, 1.0e-8), Complex::new(1.2020733530683423, 1.660750549071556e-8)),
        (Complex::new(1.00001, 1.0e-9), Complex::new(1.2020733530686252, 1.8021204870480909e-9)),
        (Complex::new(1.00001, 1.0e-10), Complex::new(1.2020733530686536, 3.2158172022947826e-10)),
        (Complex::new(1.00001, 0.), Complex::new(1.202073353068657, -1.5707879441606565e-10)),
        (Complex::new(1.000001, -0.1), Complex::new(1.1906002572568437, -0.15788742469057168)),
        (Complex::new(1.000001, -0.01), Complex::new(1.2018347574441124, -0.016373185292843)),
        (Complex::new(1.000001, -0.001), Complex::new(1.2020551643426742, -0.0016441584242426412)),
        (Complex::new(1.000001, -0.0001), Complex::new(1.2020585026126822, -0.00016448641469272513)),
        (Complex::new(1.000001, -0.00001), Complex::new(1.2020585475144878, -0.00001644937161645757)),
        (Complex::new(1.000001, -1.0e-6), Complex::new(1.2020585480913049, -1.6449473915534411e-6)),
        (Complex::new(1.000001, -1.0e-7), Complex::new(1.2020585481001216, -1.6449627988948084e-7)),
        (Complex::new(1.000001, -1.0e-8), Complex::new(1.202058548100464, -1.6451042485414547e-8)),
        (Complex::new(1.000001, -1.0e-9), Complex::new(1.202058548100493, -1.6465179621152349e-9)),
        (Complex::new(1.000001, -1.0e-10), Complex::new(1.2020585481004957, -1.6606426635238583e-10)),
        (Complex::new(1.000001, 0.), Complex::new(1.2020585481004964, -1.5711876244495215e-12)),
        (Complex::new(1.000001, 0.1), Complex::new(1.1906002572568437, 0.15788742469057168)),
        (Complex::new(1.000001, 0.01), Complex::new(1.2018347574441124, 0.016373185292843)),
        (Complex::new(1.000001, 0.001), Complex::new(1.2020551643426742, 0.0016441584242426412)),
        (Complex::new(1.000001, 0.0001), Complex::new(1.2020585026126822, 0.00016448641469272513)),
        (Complex::new(1.000001, 0.00001), Complex::new(1.2020585475144878, 0.00001644937161645757)),
        (Complex::new(1.000001, 1.0e-6), Complex::new(1.2020585480913049, 1.6449473915534411e-6)),
        (Complex::new(1.000001, 1.0e-7), Complex::new(1.2020585481001216, 1.6449627988948084e-7)),
        (Complex::new(1.000001, 1.0e-8), Complex::new(1.202058548100464, 1.6451042485414547e-8)),
        (Complex::new(1.000001, 1.0e-9), Complex::new(1.202058548100493, 1.6465179621152349e-9)),
        (Complex::new(1.000001, 1.0e-10), Complex::new(1.2020585481004957, 1.6606426635238583e-10)),
        (Complex::new(1.000001, 0.), Complex::new(1.2020585481004964, -1.5711876244495215e-12)),
        (Complex::new(1.0000001, -0.1), Complex::new(1.1905988885038916, -0.15788725808547124)),
        (Complex::new(1.0000001, -0.01), Complex::new(1.2018332905504707, -0.016373149445312745)),
        (Complex::new(1.0000001, -0.001), Complex::new(1.2020536853041508, -0.0016441527848258901)),
        (Complex::new(1.0000001, -0.0001), Complex::new(1.2020570223095277, -0.00016448564300731167)),
        (Complex::new(1.0000001, -0.00001), Complex::new(1.2020570670830792, -0.000016449273010146507)),
        (Complex::new(1.0000001, -1.0e-6), Complex::new(1.2020570676460698, -1.644934605671147e-6)),
        (Complex::new(1.0000001, -1.0e-7), Complex::new(1.2020570676529772, -1.6449356429650576e-7)),
        (Complex::new(1.0000001, -1.0e-8), Complex::new(1.202057067653077, -1.6449372531533275e-8)),
        (Complex::new(1.0000001, -1.0e-9), Complex::new(1.2020570676530802, -1.6449508421195014e-9)),
        (Complex::new(1.0000001, -1.0e-10), Complex::new(1.2020570676530806, -1.645093838843803e-10)),
        (Complex::new(1.0000001, 0.), Complex::new(1.2020570676530813, -1.5987211554602254e-14)),
        (Complex::new(1.0000001, 0.1), Complex::new(1.1905988885038916, 0.15788725808547124)),
        (Complex::new(1.0000001, 0.01), Complex::new(1.2018332905504707, 0.016373149445312745)),
        (Complex::new(1.0000001, 0.001), Complex::new(1.2020536853041508, 0.0016441527848258901)),
        (Complex::new(1.0000001, 0.0001), Complex::new(1.2020570223095277, 0.00016448564300731167)),
        (Complex::new(1.0000001, 0.00001), Complex::new(1.2020570670830792, 0.000016449273010146507)),
        (Complex::new(1.0000001, 1.0e-6), Complex::new(1.2020570676460698, 1.644934605671147e-6)),
        (Complex::new(1.0000001, 1.0e-7), Complex::new(1.2020570676529772, 1.6449356429650576e-7)),
        (Complex::new(1.0000001, 1.0e-8), Complex::new(1.202057067653077, 1.6449372531533275e-8)),
        (Complex::new(1.0000001, 1.0e-9), Complex::new(1.2020570676530802, 1.6449508421195014e-9)),
        (Complex::new(1.0000001, 1.0e-10), Complex::new(1.2020570676530806, 1.645093838843803e-10)),
        (Complex::new(1.0000001, 0.), Complex::new(1.2020570676530813, -1.5987211554602254e-14)),
        (Complex::new(1.00000001, -0.1), Complex::new(1.1905987516286411, -0.15788724142500768)),
        (Complex::new(1.00000001, -0.01), Complex::new(1.201833143861241, -0.01637314586062381)),
        (Complex::new(1.00000001, -0.001), Complex::new(1.2020535374005328, -0.0016441522209530695)),
        (Complex::new(1.00000001, -0.0001), Complex::new(1.202056874279549, -0.00016448556590852875)),
        (Complex::new(1.00000001, -0.00001), Complex::new(1.202056919040378, -0.0000164492632219426)),
        (Complex::new(1.00000001, -1.0e-6), Complex::new(1.2020569196020845, -1.6449334133932402e-6)),
        (Complex::new(1.00000001, -1.0e-7), Complex::new(1.202056919608854, -1.644934141065988e-7)),
        (Complex::new(1.00000001, -1.0e-8), Complex::new(1.2020569196089346, -1.6449342566129377e-8)),
        (Complex::new(1.00000001, -1.0e-9), Complex::new(1.202056919608936, -1.6449340774583397e-9)),
        (Complex::new(1.00000001, -1.0e-10), Complex::new(1.202056919608936, -1.644932301084559e-10)),
        (Complex::new(1.00000001, 0.), Complex::new(1.202056919608936, 0.)),
        (Complex::new(1.00000001, 0.1), Complex::new(1.1905987516286411, 0.15788724142500768)),
        (Complex::new(1.00000001, 0.01), Complex::new(1.201833143861241, 0.01637314586062381)),
        (Complex::new(1.00000001, 0.001), Complex::new(1.2020535374005328, 0.0016441522209530695)),
        (Complex::new(1.00000001, 0.0001), Complex::new(1.202056874279549, 0.00016448556590852875)),
        (Complex::new(1.00000001, 0.00001), Complex::new(1.202056919040378, 0.0000164492632219426)),
        (Complex::new(1.00000001, 1.0e-6), Complex::new(1.2020569196020845, 1.6449334133932402e-6)),
        (Complex::new(1.00000001, 1.0e-7), Complex::new(1.202056919608854, 1.644934141065988e-7)),
        (Complex::new(1.00000001, 1.0e-8), Complex::new(1.2020569196089346, 1.6449342566129377e-8)),
        (Complex::new(1.00000001, 1.0e-9), Complex::new(1.202056919608936, 1.6449340774583397e-9)),
        (Complex::new(1.00000001, 1.0e-10), Complex::new(1.202056919608936, 1.644932301084559e-10)),
        (Complex::new(1.00000001, 0.), Complex::new(1.202056919608936, 0.)),
        (Complex::new(1.000000001, -0.1), Complex::new(1.1905987379411171, -0.15788723975896102)),
        (Complex::new(1.000000001, -0.01), Complex::new(1.2018331291923185, -0.016373145502155854)),
        (Complex::new(1.000000001, -0.001), Complex::new(1.2020535226101734, -0.001644152164567744)),
        (Complex::new(1.000000001, -0.0001), Complex::new(1.202056859476555, -0.00016448555819937067)),
        (Complex::new(1.000000001, -0.00001), Complex::new(1.2020569042361122, -0.000016449262243578552)),
        (Complex::new(1.000000001, -1.0e-6), Complex::new(1.2020569047976917, -1.6449332946367399e-6)),
        (Complex::new(1.000000001, -1.0e-7), Complex::new(1.2020569048044483, -1.6449339996052902e-7)),
        (Complex::new(1.000000001, -1.0e-8), Complex::new(1.2020569048045273, -1.644934073264448e-8)),
        (Complex::new(1.000000001, -1.0e-9), Complex::new(1.2020569048045284, -1.6449338902889027e-9)),
        (Complex::new(1.000000001, -1.0e-10), Complex::new(1.2020569048045284, -1.644932113833295e-10)),
        (Complex::new(1.000000001, 0.), Complex::new(1.2020569048045286, 0.)),
        (Complex::new(1.000000001, 0.1), Complex::new(1.1905987379411171, 0.15788723975896102)),
        (Complex::new(1.000000001, 0.01), Complex::new(1.2018331291923185, 0.016373145502155854)),
        (Complex::new(1.000000001, 0.001), Complex::new(1.2020535226101734, 0.001644152164567744)),
        (Complex::new(1.000000001, 0.0001), Complex::new(1.202056859476555, 0.00016448555819937067)),
        (Complex::new(1.000000001, 0.00001), Complex::new(1.2020569042361122, 0.000016449262243578552)),
        (Complex::new(1.000000001, 1.0e-6), Complex::new(1.2020569047976917, 1.6449332946367399e-6)),
        (Complex::new(1.000000001, 1.0e-7), Complex::new(1.2020569048044483, 1.6449339996052902e-7)),
        (Complex::new(1.000000001, 1.0e-8), Complex::new(1.2020569048045273, 1.644934073264448e-8)),
        (Complex::new(1.000000001, 1.0e-9), Complex::new(1.2020569048045284, 1.6449338902889027e-9)),
        (Complex::new(1.000000001, 1.0e-10), Complex::new(1.2020569048045284, 1.644932113833295e-10)),
        (Complex::new(1.000000001, 0.), Complex::new(1.2020569048045286, 0.)),
        (Complex::new(1.0000000001, -0.1), Complex::new(1.1905987365723645, -0.15788723959235643)),
        (Complex::new(1.0000000001, -0.01), Complex::new(1.2018331277254266, -0.0163731454663101)),
        (Complex::new(1.0000000001, -0.001), Complex::new(1.2020535211311376, -0.001644152158928315)),
        (Complex::new(1.0000000001, -0.0001), Complex::new(1.2020568579962554, -0.00016448555742906945)),
        (Complex::new(1.0000000001, -0.00001), Complex::new(1.2020569027556856, -0.000016449262145468687)),
        (Complex::new(1.0000000001, -1.0e-6), Complex::new(1.202056903317252, -1.644933281599474e-6)),
        (Complex::new(1.0000000001, -1.0e-7), Complex::new(1.2020569033240074, -1.6449339827263273e-7)),
        (Complex::new(1.0000000001, -1.0e-8), Complex::new(1.2020569033240869, -1.6449340543787234e-8)),
        (Complex::new(1.0000000001, -1.0e-9), Complex::new(1.2020569033240878, -1.6449338698776665e-9)),
        (Complex::new(1.0000000001, -1.0e-10), Complex::new(1.2020569033240878, -1.6449320928113375e-10)),
        (Complex::new(1.0000000001, 0.), Complex::new(1.202056903324088, 0.)),
        (Complex::new(1.0000000001, 0.1), Complex::new(1.1905987365723645, 0.15788723959235643)),
        (Complex::new(1.0000000001, 0.01), Complex::new(1.2018331277254266, 0.0163731454663101)),
        (Complex::new(1.0000000001, 0.001), Complex::new(1.2020535211311376, 0.001644152158928315)),
        (Complex::new(1.0000000001, 0.0001), Complex::new(1.2020568579962554, 0.00016448555742906945)),
        (Complex::new(1.0000000001, 0.00001), Complex::new(1.2020569027556856, 0.000016449262145468687)),
        (Complex::new(1.0000000001, 1.0e-6), Complex::new(1.202056903317252, 1.644933281599474e-6)),
        (Complex::new(1.0000000001, 1.0e-7), Complex::new(1.2020569033240074, 1.6449339827263273e-7)),
        (Complex::new(1.0000000001, 1.0e-8), Complex::new(1.2020569033240869, 1.6449340543787234e-8)),
        (Complex::new(1.0000000001, 1.0e-9), Complex::new(1.2020569033240878, 1.6449338698776665e-9)),
        (Complex::new(1.0000000001, 1.0e-10), Complex::new(1.2020569033240878, 1.6449320928113375e-10)),
        (Complex::new(1.0000000001, 0.), Complex::new(1.202056903324088, 0.)),
        (Complex::new(1., -0.1), Complex::new(1.1905987364202808, -0.15788723957384526)),
        (Complex::new(1., -0.01), Complex::new(1.201833127562438, -0.016373145462326454)),
        (Complex::new(1., -0.001), Complex::new(1.2020535209668006, -0.0016441521583010204)),
        (Complex::new(1., -0.0001), Complex::new(1.202056857831778, -0.00016448555734338167)),
        (Complex::new(1., -0.00001), Complex::new(1.2020569025911936, -0.00001644926213486357)),
        (Complex::new(1., -1.0e-6), Complex::new(1.2020569031527588, -1.644933279953438e-6)),
        (Complex::new(1., -1.0e-7), Complex::new(1.202056903159514, -1.644933980850102e-7)),
        (Complex::new(1., -1.0e-8), Complex::new(1.2020569031595933, -1.6449340589942456e-8)),
        (Complex::new(1., -1.0e-9), Complex::new(1.2020569031595942, -1.6449340660628283e-9)),
        (Complex::new(1., -1.0e-10), Complex::new(1.2020569031595942, -1.6449340667696865e-10)),
        (Complex::new(1., 0.), Complex::new(1.2020569031595942, 0.)),
        (Complex::new(1., 0.1), Complex::new(1.1905987364202808, 0.15788723957384526)),
        (Complex::new(1., 0.01), Complex::new(1.201833127562438, 0.016373145462326454)),
        (Complex::new(1., 0.001), Complex::new(1.2020535209668006, 0.0016441521583010204)),
        (Complex::new(1., 0.0001), Complex::new(1.202056857831778, 0.00016448555734338167)),
        (Complex::new(1., 0.00001), Complex::new(1.2020569025911936, 0.00001644926213486357)),
        (Complex::new(1., 1.0e-6), Complex::new(1.2020569031527588, 1.644933279953438e-6)),
        (Complex::new(1., 1.0e-7), Complex::new(1.202056903159514, 1.644933980850102e-7)),
        (Complex::new(1., 1.0e-8), Complex::new(1.2020569031595933, 1.6449340589942456e-8)),
        (Complex::new(1., 1.0e-9), Complex::new(1.2020569031595942, 1.6449340660628283e-9)),
        (Complex::new(1., 1.0e-10), Complex::new(1.2020569031595942, 1.6449340667696865e-10)),
        (Complex::new(1., 0.), Complex::new(1.2020569031595942, 0.)),
    ];

    for &(v, li3) in mma_values_close_to_unity.iter() {
        assert_eq_complex(v.li3(), li3, eps);
    }
}

/// @TODO: add values
#[test]
fn identities() {
    use num::Zero;
    let eps = 1e-14;
    let zero = Complex::zero();
    let values : Vec<Complex<f64>> = vec![];

    for v in &values {
        assert_eq_complex(id1(*v), zero, eps);
        assert_eq_complex(id2(*v), zero, eps);
        assert_eq_complex(id3(*v), zero, eps);
    }
}
